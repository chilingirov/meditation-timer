{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","updateTimer","id","clearInterval","setInterval","setState","time","state","slow","increaseInterval","interval","startTimer","resetTimer","showButtons","hideButtons","this","className","onMouseEnter","onMouseLeave","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA4EeA,E,kDAxEb,aAAe,IAAD,8BACZ,gBAMFC,YAAc,WACR,EAAKC,IACPC,cAAc,EAAKD,IAErB,EAAKA,GAAKE,aAAY,WACpB,EAAKC,SACH,CAAEC,KAAM,EAAKC,MAAMD,KAAO,EAAGE,KAAM,EAAKD,MAAMC,KAAO,IACrD,WACE,EAAKC,wBAGR,EAAKC,WAlBI,EAqBdD,iBAAmB,WACO,KAApB,EAAKF,MAAMC,OACbL,cAAc,EAAKD,IACnB,EAAKQ,UAAY,IACjB,EAAKL,SAAS,CAAEG,KAAM,IAAK,WACzB,EAAKP,mBA1BG,EA8BdU,WAAa,WACP,EAAKT,IAGT,EAAKD,eAlCO,EAoCdW,WAAa,WACXT,cAAc,EAAKD,IACnB,EAAKG,SAAS,CAAEC,KAAM,EAAGE,KAAM,IAC/B,EAAKN,GAAK,KACV,EAAKQ,SAAW,KAxCJ,EA0CdG,YAAc,WACZ,EAAKR,SAAS,CAAEQ,aAAa,KA3CjB,EA6CdC,YAAc,WACZ,EAAKT,SAAS,CAAEQ,aAAa,KA5C7B,EAAKX,GAAK,KACV,EAAKQ,SAAW,IAChB,EAAKH,MAAQ,CAAED,KAAM,EAAGE,KAAM,EAAGK,aAAa,GAJlC,E,0CAgDd,WAAU,IAAD,EACuBE,KAAKR,MAA3BD,EADD,EACCA,KAAMO,EADP,EACOA,YACd,OACE,qBACEG,UAAU,MACVC,aAAcF,KAAKF,YACnBK,aAAcH,KAAKD,YAHrB,SAKE,yBAAQE,UAAU,aAAlB,UACE,mBAAGA,UAAU,QAAb,SAAsBV,IACtB,sBAAKU,UAAS,kBAAaH,EAAc,GAAK,UAA9C,UACE,wBAAQG,UAAU,SAASG,QAASJ,KAAKJ,WAAzC,mBAGA,wBAAQK,UAAU,SAASG,QAASJ,KAAKH,WAAzC,+B,GA/DMQ,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7644c724.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.id = null;\n    this.interval = 1000;\n    this.state = { time: 0, slow: 0, showButtons: true };\n  }\n\n  updateTimer = () => {\n    if (this.id) {\n      clearInterval(this.id);\n    }\n    this.id = setInterval(() => {\n      this.setState(\n        { time: this.state.time + 1, slow: this.state.slow + 1 },\n        () => {\n          this.increaseInterval();\n        }\n      );\n    }, this.interval);\n  };\n\n  increaseInterval = () => {\n    if (this.state.slow === 10) {\n      clearInterval(this.id);\n      this.interval += 300;\n      this.setState({ slow: 0 }, () => {\n        this.updateTimer();\n      });\n    }\n  };\n  startTimer = () => {\n    if (this.id) {\n      return;\n    }\n    this.updateTimer();\n  };\n  resetTimer = () => {\n    clearInterval(this.id);\n    this.setState({ time: 0, slow: 0 });\n    this.id = null;\n    this.interval = 1000;\n  };\n  showButtons = () => {\n    this.setState({ showButtons: true });\n  };\n  hideButtons = () => {\n    this.setState({ showButtons: false });\n  };\n  render() {\n    const { time, showButtons } = this.state;\n    return (\n      <div\n        className=\"App\"\n        onMouseEnter={this.showButtons}\n        onMouseLeave={this.hideButtons}\n      >\n        <header className=\"App-header\">\n          <p className=\"timer\">{time}</p>\n          <div className={`buttons ${showButtons ? \"\" : \"hidden\"}`}>\n            <button className=\"button\" onClick={this.startTimer}>\n              Start\n            </button>\n            <button className=\"button\" onClick={this.resetTimer}>\n              Reset\n            </button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}